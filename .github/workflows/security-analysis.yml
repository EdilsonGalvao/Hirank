name: AppSecNub

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  security-scan:
    name: SCA and SAST
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/catthehacker/ubuntu:act-22.04
    defaults:
      run:
        working-directory: .

    env:
      DC_VERSION: "12.1.3"
      DC_INSTALL_DIR: ${{ github.workspace }}/tools/dependency-check
      DC_DATA_DIR: ${{ github.workspace }}/.dc-data
      DC_API_KEY: "47a91695-56d0-4ec1-b6e5-b81dd7d9f0e9"

    steps:
      - name: Create Folders
        run: |
          mkdir -p ${{ env.DC_DATA_DIR }}
          mkdir -p ${{ github.workspace }}/out

      - name: Install Dependency-Check as SCA
        run: |
          if [ ! -d "$DC_INSTALL_DIR" ]; then
            apt-get update && apt-get install -y openjdk-17-jre-headless wget unzip
            wget https://github.com/dependency-check/DependencyCheck/releases/download/v${{ env.DC_VERSION }}/dependency-check-${{ env.DC_VERSION }}-release.zip
             mkdir -p ${{ github.workspace }}/tools/dependency-check
            unzip dependency-check-${{ env.DC_VERSION }}-release.zip -d $DC_INSTALL_DIR
          else
            echo "DC Already Installed."
          fi
      
      - name: DC Version
        run: |
          $DC_INSTALL_DIR/bin/dependency-check.sh --version

      - name : Purge DC Database IF EXIST
        continue-on-error: true
        run: | 
          if [ -f ${{env.DC_DATA_DIR}}/odc.mv.db]; then           
            $DC_INSTALL_DIR/bin/dependency-check.sH --purge 
          else
            echo "Database not exist!"
          fi       

      - name: Rodar Dependency-Check
        continue-on-error: true
        run: |
          mkdir -p ../out
          ../tools/dependency-check/bin/dependency-check.sh \
            --project "app" \
            --scan . \
            --format "JSON" \
            --nvdApiKey ${{env.DC_API_KEY}} \
            --data "${{ env.DC_DATA_DIR }}" \
            --disableArchive \
            --failOnCVSS 0 \
            --out ../out

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: dc-security-reports
          path: out/
